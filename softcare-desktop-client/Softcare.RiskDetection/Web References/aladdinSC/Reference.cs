//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Aladdin.RiskDetection.aladdinSC {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StorageComponentSOAP", Namespace="http://aladdin-project.eu/StorageComponent/")]
    public partial class StorageComponent : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdministratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfAdministratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCarerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCarerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCarersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClinicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClinicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClinicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicianOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCliniciansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPlannedTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreMeasurementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMeasurementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfPossibleTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreQuestionnaireAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfQuestionnairesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionnaireOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuestionnaireOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateQuestionnaireOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQuestionnaireOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionnaireAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCarerAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCarerAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAssessmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarerAssessmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateExternalServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExternalServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExternalServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExternalServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkWarningAsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemParameterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsForCaregiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIdByPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSystemParameterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StorageComponent() {
            this.Url = global::Aladdin.RiskDetection.Properties.Settings.Default.Aladdin_RiskDetection_aladdinSC_StorageComponent;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreatePatientCompletedEventHandler CreatePatientCompleted;
        
        /// <remarks/>
        public event UpdatePatientCompletedEventHandler UpdatePatientCompleted;
        
        /// <remarks/>
        public event DeletePatientCompletedEventHandler DeletePatientCompleted;
        
        /// <remarks/>
        public event GetPatientCompletedEventHandler GetPatientCompleted;
        
        /// <remarks/>
        public event ListOfPatientsCompletedEventHandler ListOfPatientsCompleted;
        
        /// <remarks/>
        public event CreateAdministratorCompletedEventHandler CreateAdministratorCompleted;
        
        /// <remarks/>
        public event UpdateAdministratorCompletedEventHandler UpdateAdministratorCompleted;
        
        /// <remarks/>
        public event DeleteAdministratorCompletedEventHandler DeleteAdministratorCompleted;
        
        /// <remarks/>
        public event GetAdministratorCompletedEventHandler GetAdministratorCompleted;
        
        /// <remarks/>
        public event ListOfAdministratorsCompletedEventHandler ListOfAdministratorsCompleted;
        
        /// <remarks/>
        public event CreateCarerCompletedEventHandler CreateCarerCompleted;
        
        /// <remarks/>
        public event UpdateCarerCompletedEventHandler UpdateCarerCompleted;
        
        /// <remarks/>
        public event DeleteCarerCompletedEventHandler DeleteCarerCompleted;
        
        /// <remarks/>
        public event GetCarerCompletedEventHandler GetCarerCompleted;
        
        /// <remarks/>
        public event ListOfCarersCompletedEventHandler ListOfCarersCompleted;
        
        /// <remarks/>
        public event CreateClinicianCompletedEventHandler CreateClinicianCompleted;
        
        /// <remarks/>
        public event UpdateClinicianCompletedEventHandler UpdateClinicianCompleted;
        
        /// <remarks/>
        public event DeleteClinicianCompletedEventHandler DeleteClinicianCompleted;
        
        /// <remarks/>
        public event GetClinicianCompletedEventHandler GetClinicianCompleted;
        
        /// <remarks/>
        public event ListOfCliniciansCompletedEventHandler ListOfCliniciansCompleted;
        
        /// <remarks/>
        public event GetUserPlannedTasksCompletedEventHandler GetUserPlannedTasksCompleted;
        
        /// <remarks/>
        public event StoreMeasurementsCompletedEventHandler StoreMeasurementsCompleted;
        
        /// <remarks/>
        public event GetPatientMeasurementCompletedEventHandler GetPatientMeasurementCompleted;
        
        /// <remarks/>
        public event ChangeTaskStatusCompletedEventHandler ChangeTaskStatusCompleted;
        
        /// <remarks/>
        public event AssignTaskCompletedEventHandler AssignTaskCompleted;
        
        /// <remarks/>
        public event ListOfPossibleTasksCompletedEventHandler ListOfPossibleTasksCompleted;
        
        /// <remarks/>
        public event StoreQuestionnaireAnswersCompletedEventHandler StoreQuestionnaireAnswersCompleted;
        
        /// <remarks/>
        public event ListOfQuestionnairesCompletedEventHandler ListOfQuestionnairesCompleted;
        
        /// <remarks/>
        public event GetQuestionnaireCompletedEventHandler GetQuestionnaireCompleted;
        
        /// <remarks/>
        public event UpdateQuestionnaireCompletedEventHandler UpdateQuestionnaireCompleted;
        
        /// <remarks/>
        public event CreateQuestionnaireCompletedEventHandler CreateQuestionnaireCompleted;
        
        /// <remarks/>
        public event DeleteQuestionnaireCompletedEventHandler DeleteQuestionnaireCompleted;
        
        /// <remarks/>
        public event GetQuestionnaireAnswersCompletedEventHandler GetQuestionnaireAnswersCompleted;
        
        /// <remarks/>
        public event SavePatientAssessmentCompletedEventHandler SavePatientAssessmentCompleted;
        
        /// <remarks/>
        public event SaveCarerAssessmentCompletedEventHandler SaveCarerAssessmentCompleted;
        
        /// <remarks/>
        public event DeletePatientAssessmentCompletedEventHandler DeletePatientAssessmentCompleted;
        
        /// <remarks/>
        public event DeleteCarerAssessmentCompletedEventHandler DeleteCarerAssessmentCompleted;
        
        /// <remarks/>
        public event GetPatientAssessmentsCompletedEventHandler GetPatientAssessmentsCompleted;
        
        /// <remarks/>
        public event GetCarerAssessmentsCompletedEventHandler GetCarerAssessmentsCompleted;
        
        /// <remarks/>
        public event CreateExternalServiceCompletedEventHandler CreateExternalServiceCompleted;
        
        /// <remarks/>
        public event UpdateExternalServiceCompletedEventHandler UpdateExternalServiceCompleted;
        
        /// <remarks/>
        public event DeleteExternalServiceCompletedEventHandler DeleteExternalServiceCompleted;
        
        /// <remarks/>
        public event GetAllExternalServicesCompletedEventHandler GetAllExternalServicesCompleted;
        
        /// <remarks/>
        public event SaveWarningCompletedEventHandler SaveWarningCompleted;
        
        /// <remarks/>
        public event GetWarningsCompletedEventHandler GetWarningsCompleted;
        
        /// <remarks/>
        public event MarkWarningAsReadCompletedEventHandler MarkWarningAsReadCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event AuthCompletedEventHandler AuthCompleted;
        
        /// <remarks/>
        public event GetUserTypeCompletedEventHandler GetUserTypeCompleted;
        
        /// <remarks/>
        public event GetSystemParameterListCompletedEventHandler GetSystemParameterListCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetPatientsForCaregiverCompletedEventHandler GetPatientsForCaregiverCompleted;
        
        /// <remarks/>
        public event GetUserIdByPersonIdCompletedEventHandler GetUserIdByPersonIdCompleted;
        
        /// <remarks/>
        public event UpdateSystemParameterCompletedEventHandler UpdateSystemParameterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreatePatient", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreatePatient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Patient data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreatePatient", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePatientAsync(Patient data, string userId) {
            this.CreatePatientAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void CreatePatientAsync(Patient data, string userId, object userState) {
            if ((this.CreatePatientOperationCompleted == null)) {
                this.CreatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePatientOperationCompleted);
            }
            this.InvokeAsync("CreatePatient", new object[] {
                        data,
                        userId}, this.CreatePatientOperationCompleted, userState);
        }
        
        private void OnCreatePatientOperationCompleted(object arg) {
            if ((this.CreatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePatientCompleted(this, new CreatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdatePatient", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdatePatient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Patient data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdatePatient", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(Patient data, string userId) {
            this.UpdatePatientAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(Patient data, string userId, object userState) {
            if ((this.UpdatePatientOperationCompleted == null)) {
                this.UpdatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientOperationCompleted);
            }
            this.InvokeAsync("UpdatePatient", new object[] {
                        data,
                        userId}, this.UpdatePatientOperationCompleted, userState);
        }
        
        private void OnUpdatePatientOperationCompleted(object arg) {
            if ((this.UpdatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientCompleted(this, new UpdatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeletePatient", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeletePatient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeletePatient", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAsync(string id, string userId) {
            this.DeletePatientAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeletePatientAsync(string id, string userId, object userState) {
            if ((this.DeletePatientOperationCompleted == null)) {
                this.DeletePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientOperationCompleted);
            }
            this.InvokeAsync("DeletePatient", new object[] {
                        id,
                        userId}, this.DeletePatientOperationCompleted, userState);
        }
        
        private void OnDeletePatientOperationCompleted(object arg) {
            if ((this.DeletePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientCompleted(this, new DeletePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetPatient", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Patient GetPatient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetPatient", new object[] {
                        id,
                        userId});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAsync(string id, string userId) {
            this.GetPatientAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void GetPatientAsync(string id, string userId, object userState) {
            if ((this.GetPatientOperationCompleted == null)) {
                this.GetPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientOperationCompleted);
            }
            this.InvokeAsync("GetPatient", new object[] {
                        id,
                        userId}, this.GetPatientOperationCompleted, userState);
        }
        
        private void OnGetPatientOperationCompleted(object arg) {
            if ((this.GetPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCompleted(this, new GetPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfPatients", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatientInfo[] ListOfPatients([System.Xml.Serialization.XmlElementAttribute("filter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SearchCriteria[] filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ListOfPatients", new object[] {
                        filter,
                        userId});
            return ((PatientInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfPatientsAsync(SearchCriteria[] filter, string userId) {
            this.ListOfPatientsAsync(filter, userId, null);
        }
        
        /// <remarks/>
        public void ListOfPatientsAsync(SearchCriteria[] filter, string userId, object userState) {
            if ((this.ListOfPatientsOperationCompleted == null)) {
                this.ListOfPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfPatientsOperationCompleted);
            }
            this.InvokeAsync("ListOfPatients", new object[] {
                        filter,
                        userId}, this.ListOfPatientsOperationCompleted, userState);
        }
        
        private void OnListOfPatientsOperationCompleted(object arg) {
            if ((this.ListOfPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfPatientsCompleted(this, new ListOfPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateAdministrator", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateAdministrator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Administrator data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreateAdministrator", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAdministratorAsync(Administrator data, string userId) {
            this.CreateAdministratorAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void CreateAdministratorAsync(Administrator data, string userId, object userState) {
            if ((this.CreateAdministratorOperationCompleted == null)) {
                this.CreateAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAdministratorOperationCompleted);
            }
            this.InvokeAsync("CreateAdministrator", new object[] {
                        data,
                        userId}, this.CreateAdministratorOperationCompleted, userState);
        }
        
        private void OnCreateAdministratorOperationCompleted(object arg) {
            if ((this.CreateAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAdministratorCompleted(this, new CreateAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateAdministrator", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateAdministrator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Administrator data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdateAdministrator", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAdministratorAsync(Administrator data, string userId) {
            this.UpdateAdministratorAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void UpdateAdministratorAsync(Administrator data, string userId, object userState) {
            if ((this.UpdateAdministratorOperationCompleted == null)) {
                this.UpdateAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdministratorOperationCompleted);
            }
            this.InvokeAsync("UpdateAdministrator", new object[] {
                        data,
                        userId}, this.UpdateAdministratorOperationCompleted, userState);
        }
        
        private void OnUpdateAdministratorOperationCompleted(object arg) {
            if ((this.UpdateAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdministratorCompleted(this, new UpdateAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteAdministrator", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteAdministrator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteAdministrator", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAdministratorAsync(string id, string userId) {
            this.DeleteAdministratorAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeleteAdministratorAsync(string id, string userId, object userState) {
            if ((this.DeleteAdministratorOperationCompleted == null)) {
                this.DeleteAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAdministratorOperationCompleted);
            }
            this.InvokeAsync("DeleteAdministrator", new object[] {
                        id,
                        userId}, this.DeleteAdministratorOperationCompleted, userState);
        }
        
        private void OnDeleteAdministratorOperationCompleted(object arg) {
            if ((this.DeleteAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAdministratorCompleted(this, new DeleteAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetAdministrator", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Administrator GetAdministrator([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetAdministrator", new object[] {
                        id,
                        userId});
            return ((Administrator)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdministratorAsync(string id, string userId) {
            this.GetAdministratorAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void GetAdministratorAsync(string id, string userId, object userState) {
            if ((this.GetAdministratorOperationCompleted == null)) {
                this.GetAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdministratorOperationCompleted);
            }
            this.InvokeAsync("GetAdministrator", new object[] {
                        id,
                        userId}, this.GetAdministratorOperationCompleted, userState);
        }
        
        private void OnGetAdministratorOperationCompleted(object arg) {
            if ((this.GetAdministratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdministratorCompleted(this, new GetAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfAdministrators", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AdministratorInfo[] ListOfAdministrators([System.Xml.Serialization.XmlElementAttribute("filter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SearchCriteria[] filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ListOfAdministrators", new object[] {
                        filter,
                        userId});
            return ((AdministratorInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfAdministratorsAsync(SearchCriteria[] filter, string userId) {
            this.ListOfAdministratorsAsync(filter, userId, null);
        }
        
        /// <remarks/>
        public void ListOfAdministratorsAsync(SearchCriteria[] filter, string userId, object userState) {
            if ((this.ListOfAdministratorsOperationCompleted == null)) {
                this.ListOfAdministratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfAdministratorsOperationCompleted);
            }
            this.InvokeAsync("ListOfAdministrators", new object[] {
                        filter,
                        userId}, this.ListOfAdministratorsOperationCompleted, userState);
        }
        
        private void OnListOfAdministratorsOperationCompleted(object arg) {
            if ((this.ListOfAdministratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfAdministratorsCompleted(this, new ListOfAdministratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateCarer", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateCarer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Carer data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreateCarer", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCarerAsync(Carer data, string userId) {
            this.CreateCarerAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void CreateCarerAsync(Carer data, string userId, object userState) {
            if ((this.CreateCarerOperationCompleted == null)) {
                this.CreateCarerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCarerOperationCompleted);
            }
            this.InvokeAsync("CreateCarer", new object[] {
                        data,
                        userId}, this.CreateCarerOperationCompleted, userState);
        }
        
        private void OnCreateCarerOperationCompleted(object arg) {
            if ((this.CreateCarerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCarerCompleted(this, new CreateCarerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateCarer", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateCarer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Carer data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdateCarer", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarerAsync(Carer data, string userId) {
            this.UpdateCarerAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void UpdateCarerAsync(Carer data, string userId, object userState) {
            if ((this.UpdateCarerOperationCompleted == null)) {
                this.UpdateCarerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarerOperationCompleted);
            }
            this.InvokeAsync("UpdateCarer", new object[] {
                        data,
                        userId}, this.UpdateCarerOperationCompleted, userState);
        }
        
        private void OnUpdateCarerOperationCompleted(object arg) {
            if ((this.UpdateCarerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarerCompleted(this, new UpdateCarerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteCarer", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteCarer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteCarer", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCarerAsync(string id, string userId) {
            this.DeleteCarerAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeleteCarerAsync(string id, string userId, object userState) {
            if ((this.DeleteCarerOperationCompleted == null)) {
                this.DeleteCarerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCarerOperationCompleted);
            }
            this.InvokeAsync("DeleteCarer", new object[] {
                        id,
                        userId}, this.DeleteCarerOperationCompleted, userState);
        }
        
        private void OnDeleteCarerOperationCompleted(object arg) {
            if ((this.DeleteCarerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCarerCompleted(this, new DeleteCarerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetCarer", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Carer GetCarer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetCarer", new object[] {
                        id,
                        userId});
            return ((Carer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarerAsync(string id, string userId) {
            this.GetCarerAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void GetCarerAsync(string id, string userId, object userState) {
            if ((this.GetCarerOperationCompleted == null)) {
                this.GetCarerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarerOperationCompleted);
            }
            this.InvokeAsync("GetCarer", new object[] {
                        id,
                        userId}, this.GetCarerOperationCompleted, userState);
        }
        
        private void OnGetCarerOperationCompleted(object arg) {
            if ((this.GetCarerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarerCompleted(this, new GetCarerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfCarers", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CarerInfo[] ListOfCarers([System.Xml.Serialization.XmlElementAttribute("filter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SearchCriteria[] filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ListOfCarers", new object[] {
                        filter,
                        userId});
            return ((CarerInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCarersAsync(SearchCriteria[] filter, string userId) {
            this.ListOfCarersAsync(filter, userId, null);
        }
        
        /// <remarks/>
        public void ListOfCarersAsync(SearchCriteria[] filter, string userId, object userState) {
            if ((this.ListOfCarersOperationCompleted == null)) {
                this.ListOfCarersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCarersOperationCompleted);
            }
            this.InvokeAsync("ListOfCarers", new object[] {
                        filter,
                        userId}, this.ListOfCarersOperationCompleted, userState);
        }
        
        private void OnListOfCarersOperationCompleted(object arg) {
            if ((this.ListOfCarersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCarersCompleted(this, new ListOfCarersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateClinician", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateClinician([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Clinician data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreateClinician", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateClinicianAsync(Clinician data, string userId) {
            this.CreateClinicianAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void CreateClinicianAsync(Clinician data, string userId, object userState) {
            if ((this.CreateClinicianOperationCompleted == null)) {
                this.CreateClinicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClinicianOperationCompleted);
            }
            this.InvokeAsync("CreateClinician", new object[] {
                        data,
                        userId}, this.CreateClinicianOperationCompleted, userState);
        }
        
        private void OnCreateClinicianOperationCompleted(object arg) {
            if ((this.CreateClinicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClinicianCompleted(this, new CreateClinicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateClinician", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateClinician([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Clinician data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdateClinician", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClinicianAsync(Clinician data, string userId) {
            this.UpdateClinicianAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void UpdateClinicianAsync(Clinician data, string userId, object userState) {
            if ((this.UpdateClinicianOperationCompleted == null)) {
                this.UpdateClinicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClinicianOperationCompleted);
            }
            this.InvokeAsync("UpdateClinician", new object[] {
                        data,
                        userId}, this.UpdateClinicianOperationCompleted, userState);
        }
        
        private void OnUpdateClinicianOperationCompleted(object arg) {
            if ((this.UpdateClinicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClinicianCompleted(this, new UpdateClinicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteClinician", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteClinician([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteClinician", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClinicianAsync(string id, string userId) {
            this.DeleteClinicianAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeleteClinicianAsync(string id, string userId, object userState) {
            if ((this.DeleteClinicianOperationCompleted == null)) {
                this.DeleteClinicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClinicianOperationCompleted);
            }
            this.InvokeAsync("DeleteClinician", new object[] {
                        id,
                        userId}, this.DeleteClinicianOperationCompleted, userState);
        }
        
        private void OnDeleteClinicianOperationCompleted(object arg) {
            if ((this.DeleteClinicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClinicianCompleted(this, new DeleteClinicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetClinician", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Clinician GetClinician([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetClinician", new object[] {
                        id,
                        userId});
            return ((Clinician)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicianAsync(string id, string userId) {
            this.GetClinicianAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void GetClinicianAsync(string id, string userId, object userState) {
            if ((this.GetClinicianOperationCompleted == null)) {
                this.GetClinicianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicianOperationCompleted);
            }
            this.InvokeAsync("GetClinician", new object[] {
                        id,
                        userId}, this.GetClinicianOperationCompleted, userState);
        }
        
        private void OnGetClinicianOperationCompleted(object arg) {
            if ((this.GetClinicianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicianCompleted(this, new GetClinicianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfClinicians", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ClinicianInfo[] ListOfClinicians([System.Xml.Serialization.XmlElementAttribute("filter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SearchCriteria[] filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ListOfClinicians", new object[] {
                        filter,
                        userId});
            return ((ClinicianInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCliniciansAsync(SearchCriteria[] filter, string userId) {
            this.ListOfCliniciansAsync(filter, userId, null);
        }
        
        /// <remarks/>
        public void ListOfCliniciansAsync(SearchCriteria[] filter, string userId, object userState) {
            if ((this.ListOfCliniciansOperationCompleted == null)) {
                this.ListOfCliniciansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCliniciansOperationCompleted);
            }
            this.InvokeAsync("ListOfClinicians", new object[] {
                        filter,
                        userId}, this.ListOfCliniciansOperationCompleted, userState);
        }
        
        private void OnListOfCliniciansOperationCompleted(object arg) {
            if ((this.ListOfCliniciansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCliniciansCompleted(this, new ListOfCliniciansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetUserPlannedTasks", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Task[] GetUserPlannedTasks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime toDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string requesterId) {
            object[] results = this.Invoke("GetUserPlannedTasks", new object[] {
                        userId,
                        fromDate,
                        toDate,
                        locale,
                        requesterId});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPlannedTasksAsync(string userId, System.DateTime fromDate, System.DateTime toDate, SystemParameter locale, string requesterId) {
            this.GetUserPlannedTasksAsync(userId, fromDate, toDate, locale, requesterId, null);
        }
        
        /// <remarks/>
        public void GetUserPlannedTasksAsync(string userId, System.DateTime fromDate, System.DateTime toDate, SystemParameter locale, string requesterId, object userState) {
            if ((this.GetUserPlannedTasksOperationCompleted == null)) {
                this.GetUserPlannedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPlannedTasksOperationCompleted);
            }
            this.InvokeAsync("GetUserPlannedTasks", new object[] {
                        userId,
                        fromDate,
                        toDate,
                        locale,
                        requesterId}, this.GetUserPlannedTasksOperationCompleted, userState);
        }
        
        private void OnGetUserPlannedTasksOperationCompleted(object arg) {
            if ((this.GetUserPlannedTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPlannedTasksCompleted(this, new GetUserPlannedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/StoreMeasurements", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult StoreMeasurements([System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Measurement[] data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("StoreMeasurements", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void StoreMeasurementsAsync(Measurement[] data, string userId) {
            this.StoreMeasurementsAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void StoreMeasurementsAsync(Measurement[] data, string userId, object userState) {
            if ((this.StoreMeasurementsOperationCompleted == null)) {
                this.StoreMeasurementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreMeasurementsOperationCompleted);
            }
            this.InvokeAsync("StoreMeasurements", new object[] {
                        data,
                        userId}, this.StoreMeasurementsOperationCompleted, userState);
        }
        
        private void OnStoreMeasurementsOperationCompleted(object arg) {
            if ((this.StoreMeasurementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreMeasurementsCompleted(this, new StoreMeasurementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetPatientMeasurement", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Measurement[] GetPatientMeasurement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PatientId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int MeasurementType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime fromData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime toData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetPatientMeasurement", new object[] {
                        PatientId,
                        MeasurementType,
                        fromData,
                        toData,
                        userId});
            return ((Measurement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMeasurementAsync(string PatientId, int MeasurementType, System.DateTime fromData, System.DateTime toData, string userId) {
            this.GetPatientMeasurementAsync(PatientId, MeasurementType, fromData, toData, userId, null);
        }
        
        /// <remarks/>
        public void GetPatientMeasurementAsync(string PatientId, int MeasurementType, System.DateTime fromData, System.DateTime toData, string userId, object userState) {
            if ((this.GetPatientMeasurementOperationCompleted == null)) {
                this.GetPatientMeasurementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMeasurementOperationCompleted);
            }
            this.InvokeAsync("GetPatientMeasurement", new object[] {
                        PatientId,
                        MeasurementType,
                        fromData,
                        toData,
                        userId}, this.GetPatientMeasurementOperationCompleted, userState);
        }
        
        private void OnGetPatientMeasurementOperationCompleted(object arg) {
            if ((this.GetPatientMeasurementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMeasurementCompleted(this, new GetPatientMeasurementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ChangeTaskStatus", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult ChangeTaskStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int TaskId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int TaskStatus, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ChangeTaskStatus", new object[] {
                        TaskId,
                        TaskStatus,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeTaskStatusAsync(int TaskId, int TaskStatus, string userId) {
            this.ChangeTaskStatusAsync(TaskId, TaskStatus, userId, null);
        }
        
        /// <remarks/>
        public void ChangeTaskStatusAsync(int TaskId, int TaskStatus, string userId, object userState) {
            if ((this.ChangeTaskStatusOperationCompleted == null)) {
                this.ChangeTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeTaskStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeTaskStatus", new object[] {
                        TaskId,
                        TaskStatus,
                        userId}, this.ChangeTaskStatusOperationCompleted, userState);
        }
        
        private void OnChangeTaskStatusOperationCompleted(object arg) {
            if ((this.ChangeTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeTaskStatusCompleted(this, new ChangeTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/AssignTask", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult AssignTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Task task, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("AssignTask", new object[] {
                        task,
                        locale,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void AssignTaskAsync(Task task, SystemParameter locale, string userId) {
            this.AssignTaskAsync(task, locale, userId, null);
        }
        
        /// <remarks/>
        public void AssignTaskAsync(Task task, SystemParameter locale, string userId, object userState) {
            if ((this.AssignTaskOperationCompleted == null)) {
                this.AssignTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTaskOperationCompleted);
            }
            this.InvokeAsync("AssignTask", new object[] {
                        task,
                        locale,
                        userId}, this.AssignTaskOperationCompleted, userState);
        }
        
        private void OnAssignTaskOperationCompleted(object arg) {
            if ((this.AssignTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTaskCompleted(this, new AssignTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfPossibleTasks", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SystemParameter[] ListOfPossibleTasks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int userType) {
            object[] results = this.Invoke("ListOfPossibleTasks", new object[] {
                        userType});
            return ((SystemParameter[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfPossibleTasksAsync(int userType) {
            this.ListOfPossibleTasksAsync(userType, null);
        }
        
        /// <remarks/>
        public void ListOfPossibleTasksAsync(int userType, object userState) {
            if ((this.ListOfPossibleTasksOperationCompleted == null)) {
                this.ListOfPossibleTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfPossibleTasksOperationCompleted);
            }
            this.InvokeAsync("ListOfPossibleTasks", new object[] {
                        userType}, this.ListOfPossibleTasksOperationCompleted, userState);
        }
        
        private void OnListOfPossibleTasksOperationCompleted(object arg) {
            if ((this.ListOfPossibleTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfPossibleTasksCompleted(this, new ListOfPossibleTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/StoreQuestionnaireAnswers", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult StoreQuestionnaireAnswers([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QuestionnaireAnswers data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("StoreQuestionnaireAnswers", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void StoreQuestionnaireAnswersAsync(QuestionnaireAnswers data, string userId) {
            this.StoreQuestionnaireAnswersAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void StoreQuestionnaireAnswersAsync(QuestionnaireAnswers data, string userId, object userState) {
            if ((this.StoreQuestionnaireAnswersOperationCompleted == null)) {
                this.StoreQuestionnaireAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreQuestionnaireAnswersOperationCompleted);
            }
            this.InvokeAsync("StoreQuestionnaireAnswers", new object[] {
                        data,
                        userId}, this.StoreQuestionnaireAnswersOperationCompleted, userState);
        }
        
        private void OnStoreQuestionnaireAnswersOperationCompleted(object arg) {
            if ((this.StoreQuestionnaireAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreQuestionnaireAnswersCompleted(this, new StoreQuestionnaireAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ListOfQuestionnaires", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QuestionnaireInfo[] ListOfQuestionnaires([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("ListOfQuestionnaires", new object[] {
                        locale,
                        userId});
            return ((QuestionnaireInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfQuestionnairesAsync(SystemParameter locale, string userId) {
            this.ListOfQuestionnairesAsync(locale, userId, null);
        }
        
        /// <remarks/>
        public void ListOfQuestionnairesAsync(SystemParameter locale, string userId, object userState) {
            if ((this.ListOfQuestionnairesOperationCompleted == null)) {
                this.ListOfQuestionnairesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfQuestionnairesOperationCompleted);
            }
            this.InvokeAsync("ListOfQuestionnaires", new object[] {
                        locale,
                        userId}, this.ListOfQuestionnairesOperationCompleted, userState);
        }
        
        private void OnListOfQuestionnairesOperationCompleted(object arg) {
            if ((this.ListOfQuestionnairesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfQuestionnairesCompleted(this, new ListOfQuestionnairesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetQuestionnaire", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Questionnaire GetQuestionnaire([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetQuestionnaire", new object[] {
                        id,
                        locale,
                        userId});
            return ((Questionnaire)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionnaireAsync(string id, SystemParameter locale, string userId) {
            this.GetQuestionnaireAsync(id, locale, userId, null);
        }
        
        /// <remarks/>
        public void GetQuestionnaireAsync(string id, SystemParameter locale, string userId, object userState) {
            if ((this.GetQuestionnaireOperationCompleted == null)) {
                this.GetQuestionnaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionnaireOperationCompleted);
            }
            this.InvokeAsync("GetQuestionnaire", new object[] {
                        id,
                        locale,
                        userId}, this.GetQuestionnaireOperationCompleted, userState);
        }
        
        private void OnGetQuestionnaireOperationCompleted(object arg) {
            if ((this.GetQuestionnaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionnaireCompleted(this, new GetQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateQuestionnaire", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateQuestionnaire([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Questionnaire data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdateQuestionnaire", new object[] {
                        data,
                        locale,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuestionnaireAsync(Questionnaire data, SystemParameter locale, string userId) {
            this.UpdateQuestionnaireAsync(data, locale, userId, null);
        }
        
        /// <remarks/>
        public void UpdateQuestionnaireAsync(Questionnaire data, SystemParameter locale, string userId, object userState) {
            if ((this.UpdateQuestionnaireOperationCompleted == null)) {
                this.UpdateQuestionnaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionnaireOperationCompleted);
            }
            this.InvokeAsync("UpdateQuestionnaire", new object[] {
                        data,
                        locale,
                        userId}, this.UpdateQuestionnaireOperationCompleted, userState);
        }
        
        private void OnUpdateQuestionnaireOperationCompleted(object arg) {
            if ((this.UpdateQuestionnaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuestionnaireCompleted(this, new UpdateQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateQuestionnaire", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateQuestionnaire([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Questionnaire data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreateQuestionnaire", new object[] {
                        data,
                        locale,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateQuestionnaireAsync(Questionnaire data, SystemParameter locale, string userId) {
            this.CreateQuestionnaireAsync(data, locale, userId, null);
        }
        
        /// <remarks/>
        public void CreateQuestionnaireAsync(Questionnaire data, SystemParameter locale, string userId, object userState) {
            if ((this.CreateQuestionnaireOperationCompleted == null)) {
                this.CreateQuestionnaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateQuestionnaireOperationCompleted);
            }
            this.InvokeAsync("CreateQuestionnaire", new object[] {
                        data,
                        locale,
                        userId}, this.CreateQuestionnaireOperationCompleted, userState);
        }
        
        private void OnCreateQuestionnaireOperationCompleted(object arg) {
            if ((this.CreateQuestionnaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateQuestionnaireCompleted(this, new CreateQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteQuestionnaire", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteQuestionnaire([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteQuestionnaire", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQuestionnaireAsync(string id, string userId) {
            this.DeleteQuestionnaireAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeleteQuestionnaireAsync(string id, string userId, object userState) {
            if ((this.DeleteQuestionnaireOperationCompleted == null)) {
                this.DeleteQuestionnaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQuestionnaireOperationCompleted);
            }
            this.InvokeAsync("DeleteQuestionnaire", new object[] {
                        id,
                        userId}, this.DeleteQuestionnaireOperationCompleted, userState);
        }
        
        private void OnDeleteQuestionnaireOperationCompleted(object arg) {
            if ((this.DeleteQuestionnaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQuestionnaireCompleted(this, new DeleteQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetQuestionnaireAnswers", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QuestionnaireAnswers[] GetQuestionnaireAnswers([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ObjectId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime toDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetQuestionnaireAnswers", new object[] {
                        ObjectId,
                        fromDate,
                        toDate,
                        userId});
            return ((QuestionnaireAnswers[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionnaireAnswersAsync(string ObjectId, System.DateTime fromDate, System.DateTime toDate, string userId) {
            this.GetQuestionnaireAnswersAsync(ObjectId, fromDate, toDate, userId, null);
        }
        
        /// <remarks/>
        public void GetQuestionnaireAnswersAsync(string ObjectId, System.DateTime fromDate, System.DateTime toDate, string userId, object userState) {
            if ((this.GetQuestionnaireAnswersOperationCompleted == null)) {
                this.GetQuestionnaireAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionnaireAnswersOperationCompleted);
            }
            this.InvokeAsync("GetQuestionnaireAnswers", new object[] {
                        ObjectId,
                        fromDate,
                        toDate,
                        userId}, this.GetQuestionnaireAnswersOperationCompleted, userState);
        }
        
        private void OnGetQuestionnaireAnswersOperationCompleted(object arg) {
            if ((this.GetQuestionnaireAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionnaireAnswersCompleted(this, new GetQuestionnaireAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/SavePatientAssessment", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult SavePatientAssessment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] PatientAssessment assessment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("SavePatientAssessment", new object[] {
                        assessment,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientAssessmentAsync(PatientAssessment assessment, string userId) {
            this.SavePatientAssessmentAsync(assessment, userId, null);
        }
        
        /// <remarks/>
        public void SavePatientAssessmentAsync(PatientAssessment assessment, string userId, object userState) {
            if ((this.SavePatientAssessmentOperationCompleted == null)) {
                this.SavePatientAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientAssessmentOperationCompleted);
            }
            this.InvokeAsync("SavePatientAssessment", new object[] {
                        assessment,
                        userId}, this.SavePatientAssessmentOperationCompleted, userState);
        }
        
        private void OnSavePatientAssessmentOperationCompleted(object arg) {
            if ((this.SavePatientAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientAssessmentCompleted(this, new SavePatientAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/SaveCarerAssessment", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult SaveCarerAssessment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CarerAssessment assessment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("SaveCarerAssessment", new object[] {
                        assessment,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCarerAssessmentAsync(CarerAssessment assessment, string userId) {
            this.SaveCarerAssessmentAsync(assessment, userId, null);
        }
        
        /// <remarks/>
        public void SaveCarerAssessmentAsync(CarerAssessment assessment, string userId, object userState) {
            if ((this.SaveCarerAssessmentOperationCompleted == null)) {
                this.SaveCarerAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCarerAssessmentOperationCompleted);
            }
            this.InvokeAsync("SaveCarerAssessment", new object[] {
                        assessment,
                        userId}, this.SaveCarerAssessmentOperationCompleted, userState);
        }
        
        private void OnSaveCarerAssessmentOperationCompleted(object arg) {
            if ((this.SaveCarerAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCarerAssessmentCompleted(this, new SaveCarerAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeletePatientAssessment", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeletePatientAssessment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string assessmentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeletePatientAssessment", new object[] {
                        assessmentId,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAssessmentAsync(string assessmentId, string userId) {
            this.DeletePatientAssessmentAsync(assessmentId, userId, null);
        }
        
        /// <remarks/>
        public void DeletePatientAssessmentAsync(string assessmentId, string userId, object userState) {
            if ((this.DeletePatientAssessmentOperationCompleted == null)) {
                this.DeletePatientAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientAssessmentOperationCompleted);
            }
            this.InvokeAsync("DeletePatientAssessment", new object[] {
                        assessmentId,
                        userId}, this.DeletePatientAssessmentOperationCompleted, userState);
        }
        
        private void OnDeletePatientAssessmentOperationCompleted(object arg) {
            if ((this.DeletePatientAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientAssessmentCompleted(this, new DeletePatientAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteCarerAssessment", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteCarerAssessment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string assessmentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteCarerAssessment", new object[] {
                        assessmentId,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCarerAssessmentAsync(string assessmentId, string userId) {
            this.DeleteCarerAssessmentAsync(assessmentId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteCarerAssessmentAsync(string assessmentId, string userId, object userState) {
            if ((this.DeleteCarerAssessmentOperationCompleted == null)) {
                this.DeleteCarerAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCarerAssessmentOperationCompleted);
            }
            this.InvokeAsync("DeleteCarerAssessment", new object[] {
                        assessmentId,
                        userId}, this.DeleteCarerAssessmentOperationCompleted, userState);
        }
        
        private void OnDeleteCarerAssessmentOperationCompleted(object arg) {
            if ((this.DeleteCarerAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCarerAssessmentCompleted(this, new DeleteCarerAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetPatientAssessments", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatientAssessment[] GetPatientAssessments([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string patientId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetPatientAssessments", new object[] {
                        patientId,
                        userId});
            return ((PatientAssessment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAssessmentsAsync(string patientId, string userId) {
            this.GetPatientAssessmentsAsync(patientId, userId, null);
        }
        
        /// <remarks/>
        public void GetPatientAssessmentsAsync(string patientId, string userId, object userState) {
            if ((this.GetPatientAssessmentsOperationCompleted == null)) {
                this.GetPatientAssessmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAssessmentsOperationCompleted);
            }
            this.InvokeAsync("GetPatientAssessments", new object[] {
                        patientId,
                        userId}, this.GetPatientAssessmentsOperationCompleted, userState);
        }
        
        private void OnGetPatientAssessmentsOperationCompleted(object arg) {
            if ((this.GetPatientAssessmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAssessmentsCompleted(this, new GetPatientAssessmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetCarerAssessments", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CarerAssessment[] GetCarerAssessments([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string carerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetCarerAssessments", new object[] {
                        carerId,
                        userId});
            return ((CarerAssessment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCarerAssessmentsAsync(string carerId, string userId) {
            this.GetCarerAssessmentsAsync(carerId, userId, null);
        }
        
        /// <remarks/>
        public void GetCarerAssessmentsAsync(string carerId, string userId, object userState) {
            if ((this.GetCarerAssessmentsOperationCompleted == null)) {
                this.GetCarerAssessmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarerAssessmentsOperationCompleted);
            }
            this.InvokeAsync("GetCarerAssessments", new object[] {
                        carerId,
                        userId}, this.GetCarerAssessmentsOperationCompleted, userState);
        }
        
        private void OnGetCarerAssessmentsOperationCompleted(object arg) {
            if ((this.GetCarerAssessmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarerAssessmentsCompleted(this, new GetCarerAssessmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateExternalService", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateExternalService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ExternalService data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("CreateExternalService", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateExternalServiceAsync(ExternalService data, string userId) {
            this.CreateExternalServiceAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void CreateExternalServiceAsync(ExternalService data, string userId, object userState) {
            if ((this.CreateExternalServiceOperationCompleted == null)) {
                this.CreateExternalServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateExternalServiceOperationCompleted);
            }
            this.InvokeAsync("CreateExternalService", new object[] {
                        data,
                        userId}, this.CreateExternalServiceOperationCompleted, userState);
        }
        
        private void OnCreateExternalServiceOperationCompleted(object arg) {
            if ((this.CreateExternalServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateExternalServiceCompleted(this, new CreateExternalServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateExternalService", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateExternalService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ExternalService data, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("UpdateExternalService", new object[] {
                        data,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateExternalServiceAsync(ExternalService data, string userId) {
            this.UpdateExternalServiceAsync(data, userId, null);
        }
        
        /// <remarks/>
        public void UpdateExternalServiceAsync(ExternalService data, string userId, object userState) {
            if ((this.UpdateExternalServiceOperationCompleted == null)) {
                this.UpdateExternalServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExternalServiceOperationCompleted);
            }
            this.InvokeAsync("UpdateExternalService", new object[] {
                        data,
                        userId}, this.UpdateExternalServiceOperationCompleted, userState);
        }
        
        private void OnUpdateExternalServiceOperationCompleted(object arg) {
            if ((this.UpdateExternalServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExternalServiceCompleted(this, new UpdateExternalServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteExternalService", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteExternalService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("DeleteExternalService", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExternalServiceAsync(string id, string userId) {
            this.DeleteExternalServiceAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void DeleteExternalServiceAsync(string id, string userId, object userState) {
            if ((this.DeleteExternalServiceOperationCompleted == null)) {
                this.DeleteExternalServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExternalServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteExternalService", new object[] {
                        id,
                        userId}, this.DeleteExternalServiceOperationCompleted, userState);
        }
        
        private void OnDeleteExternalServiceOperationCompleted(object arg) {
            if ((this.DeleteExternalServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExternalServiceCompleted(this, new DeleteExternalServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetAllExternalServices", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExternalService[] GetAllExternalServices([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetAllExternalServices", new object[] {
                        userId});
            return ((ExternalService[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExternalServicesAsync(string userId) {
            this.GetAllExternalServicesAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllExternalServicesAsync(string userId, object userState) {
            if ((this.GetAllExternalServicesOperationCompleted == null)) {
                this.GetAllExternalServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExternalServicesOperationCompleted);
            }
            this.InvokeAsync("GetAllExternalServices", new object[] {
                        userId}, this.GetAllExternalServicesOperationCompleted, userState);
        }
        
        private void OnGetAllExternalServicesOperationCompleted(object arg) {
            if ((this.GetAllExternalServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExternalServicesCompleted(this, new GetAllExternalServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/SaveWarning", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult SaveWarning([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Warning warn, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("SaveWarning", new object[] {
                        warn,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWarningAsync(Warning warn, string userId) {
            this.SaveWarningAsync(warn, userId, null);
        }
        
        /// <remarks/>
        public void SaveWarningAsync(Warning warn, string userId, object userState) {
            if ((this.SaveWarningOperationCompleted == null)) {
                this.SaveWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWarningOperationCompleted);
            }
            this.InvokeAsync("SaveWarning", new object[] {
                        warn,
                        userId}, this.SaveWarningOperationCompleted, userState);
        }
        
        private void OnSaveWarningOperationCompleted(object arg) {
            if ((this.SaveWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWarningCompleted(this, new SaveWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetWarnings", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Warning[] GetWarnings([System.Xml.Serialization.XmlElementAttribute("warn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SearchCriteria[] warn, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetWarnings", new object[] {
                        warn,
                        userId});
            return ((Warning[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningsAsync(SearchCriteria[] warn, string userId) {
            this.GetWarningsAsync(warn, userId, null);
        }
        
        /// <remarks/>
        public void GetWarningsAsync(SearchCriteria[] warn, string userId, object userState) {
            if ((this.GetWarningsOperationCompleted == null)) {
                this.GetWarningsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningsOperationCompleted);
            }
            this.InvokeAsync("GetWarnings", new object[] {
                        warn,
                        userId}, this.GetWarningsOperationCompleted, userState);
        }
        
        private void OnGetWarningsOperationCompleted(object arg) {
            if ((this.GetWarningsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningsCompleted(this, new GetWarningsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/MarkWarningAsRead", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult MarkWarningAsRead([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("MarkWarningAsRead", new object[] {
                        id,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void MarkWarningAsReadAsync(string id, string userId) {
            this.MarkWarningAsReadAsync(id, userId, null);
        }
        
        /// <remarks/>
        public void MarkWarningAsReadAsync(string id, string userId, object userState) {
            if ((this.MarkWarningAsReadOperationCompleted == null)) {
                this.MarkWarningAsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkWarningAsReadOperationCompleted);
            }
            this.InvokeAsync("MarkWarningAsRead", new object[] {
                        id,
                        userId}, this.MarkWarningAsReadOperationCompleted, userState);
        }
        
        private void OnMarkWarningAsReadOperationCompleted(object arg) {
            if ((this.MarkWarningAsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkWarningAsReadCompleted(this, new MarkWarningAsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/CreateUser", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult CreateUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] User user) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        user});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(User user) {
            this.CreateUserAsync(user, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(User user, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        user}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/DeleteUser", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult DeleteUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        id});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string id) {
            this.DeleteUserAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string id, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        id}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateUser", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] User user) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        user});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(User user) {
            this.UpdateUserAsync(user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(User user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/ChangePassword", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult ChangePassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string reqId) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userId,
                        password,
                        reqId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userId, string password, string reqId) {
            this.ChangePasswordAsync(userId, password, reqId, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userId, string password, string reqId, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userId,
                        password,
                        reqId}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/Auth", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult Auth([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string login, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("Auth", new object[] {
                        login,
                        password});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthAsync(string login, string password) {
            this.AuthAsync(login, password, null);
        }
        
        /// <remarks/>
        public void AuthAsync(string login, string password, object userState) {
            if ((this.AuthOperationCompleted == null)) {
                this.AuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthOperationCompleted);
            }
            this.InvokeAsync("Auth", new object[] {
                        login,
                        password}, this.AuthOperationCompleted, userState);
        }
        
        private void OnAuthOperationCompleted(object arg) {
            if ((this.AuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthCompleted(this, new AuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetUserType", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult GetUserType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id) {
            object[] results = this.Invoke("GetUserType", new object[] {
                        id});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(string id) {
            this.GetUserTypeAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(string id, object userState) {
            if ((this.GetUserTypeOperationCompleted == null)) {
                this.GetUserTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeOperationCompleted);
            }
            this.InvokeAsync("GetUserType", new object[] {
                        id}, this.GetUserTypeOperationCompleted, userState);
        }
        
        private void OnGetUserTypeOperationCompleted(object arg) {
            if ((this.GetUserTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeCompleted(this, new GetUserTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetSystemParameterList", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SystemParameter[] GetSystemParameterList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int type, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale) {
            object[] results = this.Invoke("GetSystemParameterList", new object[] {
                        type,
                        locale});
            return ((SystemParameter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemParameterListAsync(int type, SystemParameter locale) {
            this.GetSystemParameterListAsync(type, locale, null);
        }
        
        /// <remarks/>
        public void GetSystemParameterListAsync(int type, SystemParameter locale, object userState) {
            if ((this.GetSystemParameterListOperationCompleted == null)) {
                this.GetSystemParameterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemParameterListOperationCompleted);
            }
            this.InvokeAsync("GetSystemParameterList", new object[] {
                        type,
                        locale}, this.GetSystemParameterListOperationCompleted, userState);
        }
        
        private void OnGetSystemParameterListOperationCompleted(object arg) {
            if ((this.GetSystemParameterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemParameterListCompleted(this, new GetSystemParameterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetUser", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public User GetUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id) {
            object[] results = this.Invoke("GetUser", new object[] {
                        id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string id) {
            this.GetUserAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string id, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        id}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetPatientsForCaregiver", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PatientInfo[] GetPatientsForCaregiver([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetPatientsForCaregiver", new object[] {
                        userId});
            return ((PatientInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsForCaregiverAsync(string userId) {
            this.GetPatientsForCaregiverAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetPatientsForCaregiverAsync(string userId, object userState) {
            if ((this.GetPatientsForCaregiverOperationCompleted == null)) {
                this.GetPatientsForCaregiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsForCaregiverOperationCompleted);
            }
            this.InvokeAsync("GetPatientsForCaregiver", new object[] {
                        userId}, this.GetPatientsForCaregiverOperationCompleted, userState);
        }
        
        private void OnGetPatientsForCaregiverOperationCompleted(object arg) {
            if ((this.GetPatientsForCaregiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsForCaregiverCompleted(this, new GetPatientsForCaregiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/GetUserIdByPersonId", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult GetUserIdByPersonId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int type, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("GetUserIdByPersonId", new object[] {
                        id,
                        type,
                        userId});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIdByPersonIdAsync(string id, int type, string userId) {
            this.GetUserIdByPersonIdAsync(id, type, userId, null);
        }
        
        /// <remarks/>
        public void GetUserIdByPersonIdAsync(string id, int type, string userId, object userState) {
            if ((this.GetUserIdByPersonIdOperationCompleted == null)) {
                this.GetUserIdByPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdByPersonIdOperationCompleted);
            }
            this.InvokeAsync("GetUserIdByPersonId", new object[] {
                        id,
                        type,
                        userId}, this.GetUserIdByPersonIdOperationCompleted, userState);
        }
        
        private void OnGetUserIdByPersonIdOperationCompleted(object arg) {
            if ((this.GetUserIdByPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIdByPersonIdCompleted(this, new GetUserIdByPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://aladdin-project.eu/StorageComponent/UpdateSystemParameter", RequestNamespace="http://aladdin-project.eu/StorageComponent/", ResponseNamespace="http://aladdin-project.eu/StorageComponent/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OperationResult UpdateSystemParameter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int type, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter value, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SystemParameter locale) {
            object[] results = this.Invoke("UpdateSystemParameter", new object[] {
                        type,
                        value,
                        locale});
            return ((OperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSystemParameterAsync(int type, SystemParameter value, SystemParameter locale) {
            this.UpdateSystemParameterAsync(type, value, locale, null);
        }
        
        /// <remarks/>
        public void UpdateSystemParameterAsync(int type, SystemParameter value, SystemParameter locale, object userState) {
            if ((this.UpdateSystemParameterOperationCompleted == null)) {
                this.UpdateSystemParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSystemParameterOperationCompleted);
            }
            this.InvokeAsync("UpdateSystemParameter", new object[] {
                        type,
                        value,
                        locale}, this.UpdateSystemParameterOperationCompleted, userState);
        }
        
        private void OnUpdateSystemParameterOperationCompleted(object arg) {
            if ((this.UpdateSystemParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSystemParameterCompleted(this, new UpdateSystemParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Patient {
        
        private string idField;
        
        private PersonData personDataField;
        
        private SocioDemographicData sD_DataField;
        
        private string responsibleClinicianIDField;
        
        private PatientCarer[] patientCarerListField;
        
        private SocialWorker socialWorkerField;
        
        private Consulter consulterInChargeField;
        
        private GeneralPractitioner generalPractitionerField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public PersonData PersonData {
            get {
                return this.personDataField;
            }
            set {
                this.personDataField = value;
            }
        }
        
        /// <remarks/>
        public SocioDemographicData SD_Data {
            get {
                return this.sD_DataField;
            }
            set {
                this.sD_DataField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleClinicianID {
            get {
                return this.responsibleClinicianIDField;
            }
            set {
                this.responsibleClinicianIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PatientCarer[] PatientCarerList {
            get {
                return this.patientCarerListField;
            }
            set {
                this.patientCarerListField = value;
            }
        }
        
        /// <remarks/>
        public SocialWorker SocialWorker {
            get {
                return this.socialWorkerField;
            }
            set {
                this.socialWorkerField = value;
            }
        }
        
        /// <remarks/>
        public Consulter ConsulterInCharge {
            get {
                return this.consulterInChargeField;
            }
            set {
                this.consulterInChargeField = value;
            }
        }
        
        /// <remarks/>
        public GeneralPractitioner GeneralPractitioner {
            get {
                return this.generalPractitionerField;
            }
            set {
                this.generalPractitionerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class PersonData {
        
        private string surnameField;
        
        private string nameField;
        
        private Identifier[] identifierListField;
        
        private Address[] addressListField;
        
        private Communication[] communicationListField;
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Identifier[] IdentifierList {
            get {
                return this.identifierListField;
            }
            set {
                this.identifierListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Address[] AddressList {
            get {
                return this.addressListField;
            }
            set {
                this.addressListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Communication[] CommunicationList {
            get {
                return this.communicationListField;
            }
            set {
                this.communicationListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Identifier {
        
        private string typeField;
        
        private string numberField;
        
        private System.DateTime issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private string issueAuthorityField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string IssueAuthority {
            get {
                return this.issueAuthorityField;
            }
            set {
                this.issueAuthorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class User {
        
        private string idField;
        
        private SystemParameter typeField;
        
        private string personIDField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class SystemParameter {
        
        private string codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Warning {
        
        private string idField;
        
        private SystemParameter typeOfWarningField;
        
        private System.DateTime dateTimeOfWarningField;
        
        private bool dateTimeOfWarningFieldSpecified;
        
        private SystemParameter effectField;
        
        private SystemParameter indicatorField;
        
        private SystemParameter riskLevelField;
        
        private string justificationTextField;
        
        private SystemParameter emergencyLevelField;
        
        private string patientIDField;
        
        private bool deliveredField;
        
        private bool deliveredFieldSpecified;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter TypeOfWarning {
            get {
                return this.typeOfWarningField;
            }
            set {
                this.typeOfWarningField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeOfWarning {
            get {
                return this.dateTimeOfWarningField;
            }
            set {
                this.dateTimeOfWarningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeOfWarningSpecified {
            get {
                return this.dateTimeOfWarningFieldSpecified;
            }
            set {
                this.dateTimeOfWarningFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter Effect {
            get {
                return this.effectField;
            }
            set {
                this.effectField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter Indicator {
            get {
                return this.indicatorField;
            }
            set {
                this.indicatorField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter RiskLevel {
            get {
                return this.riskLevelField;
            }
            set {
                this.riskLevelField = value;
            }
        }
        
        /// <remarks/>
        public string JustificationText {
            get {
                return this.justificationTextField;
            }
            set {
                this.justificationTextField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter EmergencyLevel {
            get {
                return this.emergencyLevelField;
            }
            set {
                this.emergencyLevelField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Delivered {
            get {
                return this.deliveredField;
            }
            set {
                this.deliveredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveredSpecified {
            get {
                return this.deliveredFieldSpecified;
            }
            set {
                this.deliveredFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class ExternalService {
        
        private string idField;
        
        private string descriptionField;
        
        private string addressField;
        
        private string typeField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class CarerAssessment {
        
        private string idField;
        
        private string carerIDField;
        
        private string clinicianIDField;
        
        private System.DateTime dateOfAssessmentField;
        
        private string relevantHealthProblemField;
        
        private byte severityOfBurdenField;
        
        private string emotionalOrMentalDisordersField;
        
        private string psychoactiveDrugsField;
        
        private byte qualityOfLifeField;
        
        private bool qualityOfLifeFieldSpecified;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CarerID {
            get {
                return this.carerIDField;
            }
            set {
                this.carerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClinicianID {
            get {
                return this.clinicianIDField;
            }
            set {
                this.clinicianIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfAssessment {
            get {
                return this.dateOfAssessmentField;
            }
            set {
                this.dateOfAssessmentField = value;
            }
        }
        
        /// <remarks/>
        public string RelevantHealthProblem {
            get {
                return this.relevantHealthProblemField;
            }
            set {
                this.relevantHealthProblemField = value;
            }
        }
        
        /// <remarks/>
        public byte SeverityOfBurden {
            get {
                return this.severityOfBurdenField;
            }
            set {
                this.severityOfBurdenField = value;
            }
        }
        
        /// <remarks/>
        public string EmotionalOrMentalDisorders {
            get {
                return this.emotionalOrMentalDisordersField;
            }
            set {
                this.emotionalOrMentalDisordersField = value;
            }
        }
        
        /// <remarks/>
        public string PsychoactiveDrugs {
            get {
                return this.psychoactiveDrugsField;
            }
            set {
                this.psychoactiveDrugsField = value;
            }
        }
        
        /// <remarks/>
        public byte QualityOfLife {
            get {
                return this.qualityOfLifeField;
            }
            set {
                this.qualityOfLifeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QualityOfLifeSpecified {
            get {
                return this.qualityOfLifeFieldSpecified;
            }
            set {
                this.qualityOfLifeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class PatientAssessment {
        
        private string idField;
        
        private string patientIDField;
        
        private System.DateTime dateOfAssessmentField;
        
        private SystemParameter aetologyField;
        
        private byte timeEllapsedSinceDiagnosedField;
        
        private byte severityField;
        
        private string relevantPathologyAntecedentsField;
        
        private string comorbidityField;
        
        private byte charlsonComorbidityIndexField;
        
        private bool charlsonComorbidityIndexFieldSpecified;
        
        private byte barthelIndexField;
        
        private bool barthelIndexFieldSpecified;
        
        private byte lawtonIndexField;
        
        private bool lawtonIndexFieldSpecified;
        
        private byte mMSEField;
        
        private byte mDRSField;
        
        private bool mDRSFieldSpecified;
        
        private double blessedScalePart1Field;
        
        private bool blessedScalePart1FieldSpecified;
        
        private byte blessedScalePart2Field;
        
        private bool blessedScalePart2FieldSpecified;
        
        private byte blessedScalePart3Field;
        
        private bool blessedScalePart3FieldSpecified;
        
        private byte checklistMBPField;
        
        private bool checklistMBPFieldSpecified;
        
        private byte nPQI_SeverityField;
        
        private bool nPQI_SeverityFieldSpecified;
        
        private byte nPQI_StressField;
        
        private bool nPQI_StressFieldSpecified;
        
        private byte gDSField;
        
        private bool gDSFieldSpecified;
        
        private bool fallsField;
        
        private bool fallsFieldSpecified;
        
        private bool incontinenceField;
        
        private bool incontinenceFieldSpecified;
        
        private bool deliriumField;
        
        private bool deliriumFieldSpecified;
        
        private bool immobilityField;
        
        private bool immobilityFieldSpecified;
        
        private bool sensorialDeficitsField;
        
        private bool sensorialDeficitsFieldSpecified;
        
        private string pharmacologicalTreatmentField;
        
        private Measurement[] clinicalDataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfAssessment {
            get {
                return this.dateOfAssessmentField;
            }
            set {
                this.dateOfAssessmentField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter Aetology {
            get {
                return this.aetologyField;
            }
            set {
                this.aetologyField = value;
            }
        }
        
        /// <remarks/>
        public byte TimeEllapsedSinceDiagnosed {
            get {
                return this.timeEllapsedSinceDiagnosedField;
            }
            set {
                this.timeEllapsedSinceDiagnosedField = value;
            }
        }
        
        /// <remarks/>
        public byte Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string RelevantPathologyAntecedents {
            get {
                return this.relevantPathologyAntecedentsField;
            }
            set {
                this.relevantPathologyAntecedentsField = value;
            }
        }
        
        /// <remarks/>
        public string Comorbidity {
            get {
                return this.comorbidityField;
            }
            set {
                this.comorbidityField = value;
            }
        }
        
        /// <remarks/>
        public byte CharlsonComorbidityIndex {
            get {
                return this.charlsonComorbidityIndexField;
            }
            set {
                this.charlsonComorbidityIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CharlsonComorbidityIndexSpecified {
            get {
                return this.charlsonComorbidityIndexFieldSpecified;
            }
            set {
                this.charlsonComorbidityIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte BarthelIndex {
            get {
                return this.barthelIndexField;
            }
            set {
                this.barthelIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarthelIndexSpecified {
            get {
                return this.barthelIndexFieldSpecified;
            }
            set {
                this.barthelIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte LawtonIndex {
            get {
                return this.lawtonIndexField;
            }
            set {
                this.lawtonIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LawtonIndexSpecified {
            get {
                return this.lawtonIndexFieldSpecified;
            }
            set {
                this.lawtonIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte MMSE {
            get {
                return this.mMSEField;
            }
            set {
                this.mMSEField = value;
            }
        }
        
        /// <remarks/>
        public byte MDRS {
            get {
                return this.mDRSField;
            }
            set {
                this.mDRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MDRSSpecified {
            get {
                return this.mDRSFieldSpecified;
            }
            set {
                this.mDRSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double BlessedScalePart1 {
            get {
                return this.blessedScalePart1Field;
            }
            set {
                this.blessedScalePart1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlessedScalePart1Specified {
            get {
                return this.blessedScalePart1FieldSpecified;
            }
            set {
                this.blessedScalePart1FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte BlessedScalePart2 {
            get {
                return this.blessedScalePart2Field;
            }
            set {
                this.blessedScalePart2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlessedScalePart2Specified {
            get {
                return this.blessedScalePart2FieldSpecified;
            }
            set {
                this.blessedScalePart2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte BlessedScalePart3 {
            get {
                return this.blessedScalePart3Field;
            }
            set {
                this.blessedScalePart3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlessedScalePart3Specified {
            get {
                return this.blessedScalePart3FieldSpecified;
            }
            set {
                this.blessedScalePart3FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte ChecklistMBP {
            get {
                return this.checklistMBPField;
            }
            set {
                this.checklistMBPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChecklistMBPSpecified {
            get {
                return this.checklistMBPFieldSpecified;
            }
            set {
                this.checklistMBPFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte NPQI_Severity {
            get {
                return this.nPQI_SeverityField;
            }
            set {
                this.nPQI_SeverityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NPQI_SeveritySpecified {
            get {
                return this.nPQI_SeverityFieldSpecified;
            }
            set {
                this.nPQI_SeverityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte NPQI_Stress {
            get {
                return this.nPQI_StressField;
            }
            set {
                this.nPQI_StressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NPQI_StressSpecified {
            get {
                return this.nPQI_StressFieldSpecified;
            }
            set {
                this.nPQI_StressFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte GDS {
            get {
                return this.gDSField;
            }
            set {
                this.gDSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GDSSpecified {
            get {
                return this.gDSFieldSpecified;
            }
            set {
                this.gDSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Falls {
            get {
                return this.fallsField;
            }
            set {
                this.fallsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FallsSpecified {
            get {
                return this.fallsFieldSpecified;
            }
            set {
                this.fallsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Incontinence {
            get {
                return this.incontinenceField;
            }
            set {
                this.incontinenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncontinenceSpecified {
            get {
                return this.incontinenceFieldSpecified;
            }
            set {
                this.incontinenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Delirium {
            get {
                return this.deliriumField;
            }
            set {
                this.deliriumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliriumSpecified {
            get {
                return this.deliriumFieldSpecified;
            }
            set {
                this.deliriumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Immobility {
            get {
                return this.immobilityField;
            }
            set {
                this.immobilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImmobilitySpecified {
            get {
                return this.immobilityFieldSpecified;
            }
            set {
                this.immobilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SensorialDeficits {
            get {
                return this.sensorialDeficitsField;
            }
            set {
                this.sensorialDeficitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SensorialDeficitsSpecified {
            get {
                return this.sensorialDeficitsFieldSpecified;
            }
            set {
                this.sensorialDeficitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string PharmacologicalTreatment {
            get {
                return this.pharmacologicalTreatmentField;
            }
            set {
                this.pharmacologicalTreatmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ClinicalData")]
        public Measurement[] ClinicalData {
            get {
                return this.clinicalDataField;
            }
            set {
                this.clinicalDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Measurement {
        
        private SystemParameter typeField;
        
        private double valueField;
        
        private System.DateTime dateTimeField;
        
        private string unitsField;
        
        private double lowerLimitField;
        
        private bool lowerLimitFieldSpecified;
        
        private double upperLimitField;
        
        private bool upperLimitFieldSpecified;
        
        private string taskIDField;
        
        /// <remarks/>
        public SystemParameter Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public double LowerLimit {
            get {
                return this.lowerLimitField;
            }
            set {
                this.lowerLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowerLimitSpecified {
            get {
                return this.lowerLimitFieldSpecified;
            }
            set {
                this.lowerLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double UpperLimit {
            get {
                return this.upperLimitField;
            }
            set {
                this.upperLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpperLimitSpecified {
            get {
                return this.upperLimitFieldSpecified;
            }
            set {
                this.upperLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TaskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class QuestionnaireInfo {
        
        private double versionField;
        
        private bool versionFieldSpecified;
        
        private string idField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class QuestionnaireAnswer {
        
        private string valueField;
        
        private string questionIDField;
        
        private string globalIDField;
        
        private string valueField1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string questionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string globalID {
            get {
                return this.globalIDField;
            }
            set {
                this.globalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField1;
            }
            set {
                this.valueField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class QuestionnaireAnswers {
        
        private QuestionnaireAnswer[] answerField;
        
        private string idField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string objectIDField;
        
        private string taskIDField;
        
        private string userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("answer")]
        public QuestionnaireAnswer[] answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TaskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class QuestionnaireQuestionAnswer {
        
        private int positionField;
        
        private string descriptionField;
        
        private byte valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        public int position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class QuestionnaireQuestion {
        
        private string titleField;
        
        private int globalIDField;
        
        private QuestionnaireQuestionAnswer[] answersField;
        
        private QuestionnaireQuestion[] questionsField;
        
        private int positionField;
        
        private string idField;
        
        private string typeField;
        
        private byte conditionField;
        
        private bool conditionFieldSpecified;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int GlobalID {
            get {
                return this.globalIDField;
            }
            set {
                this.globalIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("answer", IsNullable=false)]
        public QuestionnaireQuestionAnswer[] answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("question", IsNullable=false)]
        public QuestionnaireQuestion[] questions {
            get {
                return this.questionsField;
            }
            set {
                this.questionsField = value;
            }
        }
        
        /// <remarks/>
        public int position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conditionSpecified {
            get {
                return this.conditionFieldSpecified;
            }
            set {
                this.conditionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Questionnaire {
        
        private QuestionnaireQuestion[] questionField;
        
        private double versionField;
        
        private bool versionFieldSpecified;
        
        private string idField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("question")]
        public QuestionnaireQuestion[] question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Task {
        
        private string idField;
        
        private SystemParameter taskTypeField;
        
        private System.DateTime dateTimeAssignedField;
        
        private System.DateTime dateTimeFulfilledField;
        
        private SystemParameter taskStatusField;
        
        private string uRLField;
        
        private string textField;
        
        private Questionnaire questionnaireField;
        
        private string executorIDField;
        
        private string assignerIDField;
        
        private string objectIDField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeAssigned {
            get {
                return this.dateTimeAssignedField;
            }
            set {
                this.dateTimeAssignedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeFulfilled {
            get {
                return this.dateTimeFulfilledField;
            }
            set {
                this.dateTimeFulfilledField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter TaskStatus {
            get {
                return this.taskStatusField;
            }
            set {
                this.taskStatusField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public Questionnaire Questionnaire {
            get {
                return this.questionnaireField;
            }
            set {
                this.questionnaireField = value;
            }
        }
        
        /// <remarks/>
        public string ExecutorID {
            get {
                return this.executorIDField;
            }
            set {
                this.executorIDField = value;
            }
        }
        
        /// <remarks/>
        public string AssignerID {
            get {
                return this.assignerIDField;
            }
            set {
                this.assignerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class ClinicianInfo {
        
        private string idField;
        
        private string surnameField;
        
        private string nameField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Clinician {
        
        private string idField;
        
        private PersonData personDataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public PersonData PersonData {
            get {
                return this.personDataField;
            }
            set {
                this.personDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class CarerInfo {
        
        private string idField;
        
        private string surnameField;
        
        private string nameField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class AdministratorInfo {
        
        private string idField;
        
        private string surnameField;
        
        private string nameField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Administrator {
        
        private string idField;
        
        private PersonData personDataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public PersonData PersonData {
            get {
                return this.personDataField;
            }
            set {
                this.personDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class PatientInfo {
        
        private string idField;
        
        private string surnameField;
        
        private string nameField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class SearchCriteria {
        
        private string fieldNameField;
        
        private SystemParameter compareOpField;
        
        private string fieldValue1Field;
        
        private string fieldValue2Field;
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter CompareOp {
            get {
                return this.compareOpField;
            }
            set {
                this.compareOpField = value;
            }
        }
        
        /// <remarks/>
        public string FieldValue1 {
            get {
                return this.fieldValue1Field;
            }
            set {
                this.fieldValue1Field = value;
            }
        }
        
        /// <remarks/>
        public string FieldValue2 {
            get {
                return this.fieldValue2Field;
            }
            set {
                this.fieldValue2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class OperationResult {
        
        private string codeField;
        
        private byte statusField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class GeneralPractitioner {
        
        private string nameField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Consulter {
        
        private string nameField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class SocialWorker {
        
        private string nameField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Carer {
        
        private string idField;
        
        private PersonData personDataField;
        
        private SocioDemographicData sD_DataField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public PersonData PersonData {
            get {
                return this.personDataField;
            }
            set {
                this.personDataField = value;
            }
        }
        
        /// <remarks/>
        public SocioDemographicData SD_Data {
            get {
                return this.sD_DataField;
            }
            set {
                this.sD_DataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class SocioDemographicData {
        
        private byte ageField;
        
        private SystemParameter genderField;
        
        private SystemParameter maritalStatusField;
        
        private byte childrenField;
        
        private SystemParameter livingWithField;
        
        /// <remarks/>
        public byte Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public byte Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
        
        /// <remarks/>
        public SystemParameter LivingWith {
            get {
                return this.livingWithField;
            }
            set {
                this.livingWithField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class PatientCarer {
        
        private Carer carerField;
        
        private bool isPrimaryField;
        
        /// <remarks/>
        public Carer Carer {
            get {
                return this.carerField;
            }
            set {
                this.carerField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Communication {
        
        private string typeField;
        
        private string valueField;
        
        private string notesField;
        
        private bool isPrimaryField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://aladdin-project.eu/xsd")]
    public partial class Address {
        
        private string streetField;
        
        private string streetNoField;
        
        private string cityField;
        
        private string countyField;
        
        private string countryField;
        
        private string zipCodeField;
        
        private string notesField;
        
        private bool isPrimaryField;
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string StreetNo {
            get {
                return this.streetNoField;
            }
            set {
                this.streetNoField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreatePatientCompletedEventHandler(object sender, CreatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePatientCompletedEventHandler(object sender, UpdatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeletePatientCompletedEventHandler(object sender, DeletePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPatientCompletedEventHandler(object sender, GetPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfPatientsCompletedEventHandler(object sender, ListOfPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateAdministratorCompletedEventHandler(object sender, CreateAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateAdministratorCompletedEventHandler(object sender, UpdateAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteAdministratorCompletedEventHandler(object sender, DeleteAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAdministratorCompletedEventHandler(object sender, GetAdministratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Administrator Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Administrator)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfAdministratorsCompletedEventHandler(object sender, ListOfAdministratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfAdministratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfAdministratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdministratorInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdministratorInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCarerCompletedEventHandler(object sender, CreateCarerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCarerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCarerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateCarerCompletedEventHandler(object sender, UpdateCarerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCarerCompletedEventHandler(object sender, DeleteCarerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCarerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCarerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCarerCompletedEventHandler(object sender, GetCarerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Carer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Carer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfCarersCompletedEventHandler(object sender, ListOfCarersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCarersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCarersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CarerInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CarerInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateClinicianCompletedEventHandler(object sender, CreateClinicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClinicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClinicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateClinicianCompletedEventHandler(object sender, UpdateClinicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClinicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClinicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteClinicianCompletedEventHandler(object sender, DeleteClinicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClinicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClinicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetClinicianCompletedEventHandler(object sender, GetClinicianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clinician Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clinician)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfCliniciansCompletedEventHandler(object sender, ListOfCliniciansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCliniciansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCliniciansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClinicianInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClinicianInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserPlannedTasksCompletedEventHandler(object sender, GetUserPlannedTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPlannedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPlannedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void StoreMeasurementsCompletedEventHandler(object sender, StoreMeasurementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreMeasurementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreMeasurementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPatientMeasurementCompletedEventHandler(object sender, GetPatientMeasurementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMeasurementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMeasurementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Measurement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Measurement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeTaskStatusCompletedEventHandler(object sender, ChangeTaskStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignTaskCompletedEventHandler(object sender, AssignTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfPossibleTasksCompletedEventHandler(object sender, ListOfPossibleTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfPossibleTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfPossibleTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemParameter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemParameter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void StoreQuestionnaireAnswersCompletedEventHandler(object sender, StoreQuestionnaireAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreQuestionnaireAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreQuestionnaireAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ListOfQuestionnairesCompletedEventHandler(object sender, ListOfQuestionnairesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfQuestionnairesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfQuestionnairesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionnaireInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionnaireInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetQuestionnaireCompletedEventHandler(object sender, GetQuestionnaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Questionnaire Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Questionnaire)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateQuestionnaireCompletedEventHandler(object sender, UpdateQuestionnaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuestionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuestionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateQuestionnaireCompletedEventHandler(object sender, CreateQuestionnaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateQuestionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateQuestionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteQuestionnaireCompletedEventHandler(object sender, DeleteQuestionnaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQuestionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQuestionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetQuestionnaireAnswersCompletedEventHandler(object sender, GetQuestionnaireAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionnaireAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionnaireAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionnaireAnswers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionnaireAnswers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SavePatientAssessmentCompletedEventHandler(object sender, SavePatientAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveCarerAssessmentCompletedEventHandler(object sender, SaveCarerAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCarerAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCarerAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeletePatientAssessmentCompletedEventHandler(object sender, DeletePatientAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteCarerAssessmentCompletedEventHandler(object sender, DeleteCarerAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCarerAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCarerAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPatientAssessmentsCompletedEventHandler(object sender, GetPatientAssessmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAssessmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAssessmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAssessment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAssessment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCarerAssessmentsCompletedEventHandler(object sender, GetCarerAssessmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarerAssessmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarerAssessmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CarerAssessment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CarerAssessment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateExternalServiceCompletedEventHandler(object sender, CreateExternalServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateExternalServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateExternalServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateExternalServiceCompletedEventHandler(object sender, UpdateExternalServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateExternalServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateExternalServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteExternalServiceCompletedEventHandler(object sender, DeleteExternalServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExternalServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExternalServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllExternalServicesCompletedEventHandler(object sender, GetAllExternalServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExternalServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExternalServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExternalService[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExternalService[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveWarningCompletedEventHandler(object sender, SaveWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWarningsCompletedEventHandler(object sender, GetWarningsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Warning[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Warning[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MarkWarningAsReadCompletedEventHandler(object sender, MarkWarningAsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkWarningAsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkWarningAsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AuthCompletedEventHandler(object sender, AuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserTypeCompletedEventHandler(object sender, GetUserTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSystemParameterListCompletedEventHandler(object sender, GetSystemParameterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemParameterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemParameterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemParameter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemParameter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPatientsForCaregiverCompletedEventHandler(object sender, GetPatientsForCaregiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsForCaregiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsForCaregiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserIdByPersonIdCompletedEventHandler(object sender, GetUserIdByPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIdByPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIdByPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateSystemParameterCompletedEventHandler(object sender, UpdateSystemParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSystemParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSystemParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperationResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591